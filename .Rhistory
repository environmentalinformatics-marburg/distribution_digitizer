install.packages("shiny")
library(shiny)
runApp('app.R')
install.packages("reticulate")
library(reticulate)
os <- import("os")
#use_python("C:/Program Files (x86)/Python27/python.exe")
py_install(packages = "opencv-python", pip = TRUE)
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
library(shiny)
runApp('app.R')
library(reticulate)
library(shiny)
runApp('app.R')
use_python("C:/Program Files (x86)/Python27/python.exe")
library(shiny)
runApp('app.R')
install.packages("reticulate")
library(reticulate)
os <- import("os")
use_python("C:/Program Files (x86)/Python27/python.exe")
py_install(packages = "opencv-python", pip = TRUE)
library(shiny); source('D:/distribution_digitizer_students-main/start_dd_app.R')
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
getwd()
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#install.packages("reticulate")
library(reticulate)
os <- import("os")
#use_python("C:/Program Files (x86)/Python27/python.exe")
use_python(Sys.which("python"))
#py_install(packages = "opencv-python", pip = TRUE)
#py_install(packages = "pillow", pip = FALSE)
#install.packages("shiny")
library(shiny)
runApp('app.R')
#shiny::runGist("https://gist.github.com/sforteva/138af2ea533c2d1c3d1631b5d2d41e86")
library(reticulate)
os <- import("os")
use_python("C:/ProgramData/Anaconda3/python.exe")
source_python("D:/distribution_digitizer_students/src/Pixel_matching.py")
mainpixelmatching( "D:/distribution_digitizer_students/", 0.5)
#
source_python("D:/distribution_digitizer_students/src/Pixel_matching.py")
mainpixelmatching( "D:/distribution_digitizer_students/", 0.5)
source_python("D:/distribution_digitizer_students/src/Pixel_matching.py")
mainpixelmatching( "D:/distribution_digitizer_students/", 0.5)
source_python("D:/distribution_digitizer_students/src/Pixel_matching.py")
mainpixelmatching( "D:/distribution_digitizer_students/", 0.5)
source_python("D:/distribution_digitizer_students/src/Pixel_matching.py")
mainpixelmatching( "D:/distribution_digitizer_students/", 0.5)
library(reticulate)
os <- import("os")
use_python("C:/Program Files (x86)/Python27/python.exe")
path_dir <- ("D:/distribution_digitizer_students")
setwd(path_dir)
py_install(packages = "GDAL", pip = FALSE)
#
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
library(reticulate)
os <- import("os")
use_python("C:/Program Files (x86)/Python27/python.exe")
#path_dir <- ("D:/distribution_digitizer_students")
#setwd(path_dir)
#py_install(packages = "GDAL", pip = FALSE)
#
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
library(reticulate)
os <- import("os")
use_python("C:/Program Files (x86)/Python27/python.exe")
#path_dir <- ("D:/distribution_digitizer_students")
#setwd(path_dir)
#py_install(packages = "GDAL", pip = FALSE)
#
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
workingDir="D:/distribution_digitizer_students/"
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
library(reticulate)
os <- import("os")
use_python("C:/Program Files (x86)/Python27/python.exe")
#path_dir <- ("D:/distribution_digitizer_students")
#setwd(path_dir)
#py_install(packages = "GDAL", pip = FALSE)
#
workingDir="D:/distribution_digitizer_students/"
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
source_python("D:/distribution_digitizer_students/src/georeferencing.py")
maingeoreferencing("D:/distribution_digitizer_students/")
library(shiny); source('start_dd_app.R')
getwd()
library(reticulate) # Python binding for R. If the package is not installed, execute
# install.packages("reticulate") # and hit Y when prompted for the miniconda installation
use_python(Sys.which("python")) # Set the path to a local python installation.
os <- import("os") # python module needed for managing files, folders and their paths
py_install(packages = "opencv-python", pip = TRUE) # python module for computer vision
py_install(packages = "pillow", pip = TRUE) # Python Imaging Library
# Set the path to app.R for being able to execute the shiny app (runApp('app.R'))
# By default, this app.R lies at the root of this repository.
# In RStudio, this path can be set automatically with
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# or manually with a path of your choice:
# setwd("D:/distribution_digitizer_students-main/") # uncomment this line for setting the working directory manually.
library(shiny) # shiny library necessary for starting the app
runApp('app.R') # the app itself
getwd() # print the path to the working directory for copying into the Digitizer application (Field: "Working Git Directory").
library(reticulate) # Python binding for R. If the package is not installed, execute
# install.packages("reticulate") # and hit Y when prompted for the miniconda installation
use_python(Sys.which("python")) # Set the path to a local python installation.
os <- import("os") # python module needed for managing files, folders and their paths
py_install(packages = "opencv-python", pip = TRUE) # python module for computer vision
py_install(packages = "pillow", pip = TRUE) # Python Imaging Library
# Set the path to app.R for being able to execute the shiny app (runApp('app.R'))
# By default, this app.R lies at the root of this repository.
# In RStudio, this path can be set automatically with
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# or manually with a path of your choice:
# setwd("D:/distribution_digitizer_students-main/") # uncomment this line for setting the working directory manually.
getwd() # print the path to the working directory for copying into the Digitizer application (Field: "Working Git Directory").
library(shiny) # shiny library necessary for starting the app
runApp('app.R') # the app itself
library(reticulate) # Python binding for R. If the package is not installed, execute
# install.packages("reticulate") # and hit Y when prompted for the miniconda installation
use_python(Sys.which("python")) # Set the path to a local python installation.
os <- import("os") # python module needed for managing files, folders and their paths
py_install(packages = "opencv-python", pip = TRUE) # python module for computer vision
py_install(packages = "pillow", pip = TRUE) # Python Imaging Library
# Set the path to app.R for being able to execute the shiny app (runApp('app.R'))
# By default, this app.R lies at the root of this repository.
# In RStudio, this path can be set automatically with
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# or manually with a path of your choice:
# setwd("D:/distribution_digitizer_students-main/") # uncomment this line for setting the working directory manually.
getwd() # print the path to the working directory for copying into the Digitizer application (Field: "Working Directory").
library(shiny) # shiny library necessary for starting the app
runApp('app.R') # the app itself
runApp()
source('start_dd_app.R')
library(reticulate) # Python binding for R. If the package is not installed, execute
# install.packages("reticulate") # and hit Y when prompted for the miniconda installation
use_python(Sys.which("python")) # Set the path to a local python installation.
os <- import("os") # python module needed for managing files, folders and their paths
py_install(packages = "opencv-python", pip = TRUE) # python module for computer vision
py_install(packages = "pillow", pip = TRUE) # Python Imaging Library
# Set the path to app.R for being able to execute the shiny app (runApp('app.R'))
# By default, this app.R lies at the root of this repository.
# In RStudio, this path can be set automatically with
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# or manually with a path of your choice:
# setwd("D:/distribution_digitizer_students-main/") # uncomment this line for setting the working directory manually.
getwd() # print the path to the working directory for copying into the Digitizer application (Field: "Working Directory").
library(shiny) # shiny library necessary for starting the app
runApp('app.R') # the app itself
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('start_dd_app.R')
source('start_dd_app.R')
py_module_available(pillow)
py_module_available("pillow")
runApp()
library(shiny); source('start_dd_app.R')
source('start_dd_app.R')
library(reticulate) # Python binding for R. If the package is not installed, execute
# install.packages("reticulate") # and hit Y when prompted for the miniconda installation
use_python(Sys.which("python")) # Set the path to a local python installation.
os <- import("os") # python module needed for managing files, folders and their paths
py_install(packages = "opencv-python", pip = TRUE) # python module for computer vision
py_install(packages = "pillow", pip = TRUE) # Python Imaging Library
# Set the path to app.R for being able to execute the shiny app (runApp('app.R'))
# By default, this app.R lies at the root of this repository.
# In RStudio, this path can be set automatically with
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# or manually with a path of your choice:
# setwd("D:/distribution_digitizer_students-main/") # uncomment this line for setting the working directory manually.
getwd() # print the path to the working directory for copying into the Digitizer application (Field: "Working Directory").
library(shiny) # shiny library necessary for starting the app
runApp('app.R') # the app itself
source('start_dd_app.R')
source('start_dd_app.R')
runApp()
library(shiny); source('start_dd_app.R')
source('start_dd_app.R')
library(shiny); source('start_dd_app.R')
source('start_dd_app.R')
runApp()
runApp()
runApp()
Sys.which("python")
Sys.which("python")
library(reticulate) # Python binding for R. If the package is not installed, execute
py_install(packages = "pandas", pip = TRUE)
py_install(packages = "pandas", pip = FALSE)
py_install(packages = "GDAL", pip = FALSE)
source('start_dd_app.R')
library(reticulate) # Python binding for R. If the package is not installed, execute
# install.packages("reticulate") # and hit Y when prompted for the miniconda installation
use_python(Sys.which("python")) # Set the path to a local python installation.
os <- import("os") # python module needed for managing files, folders and their paths
py_install(packages = "opencv-python", pip = TRUE)
py_install(packages = "pillow", pip = FALSE)
py_install(packages = "pandas", pip = FALSE)
py_install(packages = "GDAL", pip = FALSE)
# Set the path to app.R for being able to execute the shiny app (runApp('app.R'))
# By default, this app.R lies at the root of this repository.
# In RStudio, this path can be set automatically with
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# or manually with a path of your choice:
# setwd("D:/distribution_digitizer_students-main/") # uncomment this line for setting the working directory manually.
getwd() # print the path to the working directory for copying into the Digitizer application (Field: "Working Directory").
library(shiny) # shiny library necessary for starting the app
runApp('app.R') # the app itself
